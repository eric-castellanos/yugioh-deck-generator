name: Terraform Plan & Apply

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: dev
      AWS_REGION: us-east-1

    defaults:
      run:
        working-directory: infra/terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Plan (initial attempt)
        id: plan
        continue-on-error: true
        run: |
            set -o pipefail

            PLAN_LOG="plan_output.txt"
            RAW_LOG="raw_plan_output.txt"

            terraform plan -input=false \
            -var "cluster_name=mlflow-cluster-${{ env.ENVIRONMENT }}" \
            -var "account_id=${{ secrets.AWS_ACCOUNT_ID }}" \
            -no-color \
            > $RAW_LOG 2>&1 || true

            # Extract lock ID safely
            LOCK_ID=$(awk '/Lock Info:/ {found=1} found && /ID:/ {print $2; exit}' $RAW_LOG)

            if [[ -n "$LOCK_ID" ]]; then
            echo "Terraform state lock detected: $LOCK_ID"
            echo "lock_id=$LOCK_ID" >> $GITHUB_OUTPUT
            else
            echo "No state lock detected."
            fi

      - name: Terraform Force Unlock (if needed)
        if: ${{ steps.plan.outputs.lock_id != '' }}
        run: terraform force-unlock -force ${{ steps.plan.outputs.lock_id }}

      - name: Terraform Plan (retry after unlock)
        id: plan_retry
        if: ${{ steps.plan.outputs.plan_success == 'false' }}
        run: |
          terraform plan -input=false \
            -var "cluster_name=mlflow-cluster-${{ env.ENVIRONMENT }}" \
            -var "account_id=${{ secrets.AWS_ACCOUNT_ID }}" \
            -out=tfplan

      - name: Terraform Apply
        if: |
          (steps.plan.outputs.plan_success == 'true' && steps.plan.outcome == 'success') ||
          (steps.plan.outputs.plan_success == 'false' && steps.plan_retry.outcome == 'success')
        run: terraform apply -auto-approve tfplan

